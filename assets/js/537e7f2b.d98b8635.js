"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8520],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(t),p=o,f=m["".concat(s,".").concat(p)]||m[p]||d[p]||i;return t?a.createElement(f,r(r({ref:n},u),{},{components:t})):a.createElement(f,r({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:o,r[1]=l;for(var c=2;c<i;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9251:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=t(7462),o=(t(7294),t(3905));const i={slug:"python-lambda-function",title:"Lambda Function in Python",authors:["daehoon"],tags:["python"]},r=void 0,l={permalink:"/blog/python-lambda-function",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-03-29-lambda-function.md",source:"@site/blog/2023-03-29-lambda-function.md",title:"Lambda Function in Python",description:"What are Lambda Functions?",date:"2023-03-29T00:00:00.000Z",formattedDate:"March 29, 2023",tags:[{label:"python",permalink:"/blog/tags/python"}],readingTime:3.16,hasTruncateMarker:!1,authors:[{name:"Daehoon Seong",title:"author",url:"https://github.com/dannyseong",imageURL:"https://avatars.githubusercontent.com/u/99000722?v=4",key:"daehoon"}],frontMatter:{slug:"python-lambda-function",title:"Lambda Function in Python",authors:["daehoon"],tags:["python"]},prevItem:{title:"Why Object-oriented Programming?",permalink:"/blog/cs-why-oop"},nextItem:{title:"*args and **kwargs in Python",permalink:"/blog/python-*args-**kwargs"}},s={authorsImageUrls:[void 0]},c=[{value:"What are Lambda Functions?",id:"what-are-lambda-functions",level:2},{value:"Syntax of Lambda Functions",id:"syntax-of-lambda-functions",level:2},{value:"Comparing Lambda Functions to Normal Functions",id:"comparing-lambda-functions-to-normal-functions",level:2},{value:"Practice Examples",id:"practice-examples",level:2},{value:"Example 1: Printing a Sentence with an Exclamation Mark",id:"example-1-printing-a-sentence-with-an-exclamation-mark",level:3},{value:"Example 2: Checking if a Grade is an A",id:"example-2-checking-if-a-grade-is-an-a",level:3},{value:"When to Use Lambda Functions",id:"when-to-use-lambda-functions",level:2},{value:"Advantages of Using Lambda Functions",id:"advantages-of-using-lambda-functions",level:2},{value:"Limitations of Lambda Functions",id:"limitations-of-lambda-functions",level:2},{value:"Conclusion",id:"conclusion",level:2}],u={toc:c},m="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(m,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"what-are-lambda-functions"},"What are Lambda Functions?"),(0,o.kt)("p",null,"In Python, a lambda function is a small, anonymous function that can take any number of arguments, but can only have one expression. Lambda functions are a shorthand way to create simple functions without using the def keyword."),(0,o.kt)("h2",{id:"syntax-of-lambda-functions"},"Syntax of Lambda Functions"),(0,o.kt)("p",null,"The syntax for a lambda function is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"lambda arguments: expression\n")),(0,o.kt)("p",null,"Here, ",(0,o.kt)("inlineCode",{parentName:"p"},"arguments")," refers to the input parameters of the function, and expression is the single ",(0,o.kt)("inlineCode",{parentName:"p"},"expression")," that the function returns."),(0,o.kt)("h2",{id:"comparing-lambda-functions-to-normal-functions"},"Comparing Lambda Functions to Normal Functions"),(0,o.kt)("p",null,"Let's take a look at how a lambda function compares to a normal function. Here's an example of a normal function that adds 2 to a given input:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def add_two(my_input):\n    return my_input + 2\n")),(0,o.kt)("p",null,"The same function could be written as a lambda function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"add_two = lambda my_input: my_input + 2\n")),(0,o.kt)("p",null,"Notice that in the lambda function version, we are returning ",(0,o.kt)("inlineCode",{parentName:"p"},"my_input + 2")," without the use of a ",(0,o.kt)("inlineCode",{parentName:"p"},"return")," keyword (the normal Python function explicitly uses the keyword ",(0,o.kt)("inlineCode",{parentName:"p"},"return"),")."),(0,o.kt)("h2",{id:"practice-examples"},"Practice Examples"),(0,o.kt)("h3",{id:"example-1-printing-a-sentence-with-an-exclamation-mark"},"Example 1: Printing a Sentence with an Exclamation Mark"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# Normal Function\ndef add_bang(sentence):\n    print(sentence + '!')\n# Lambda Function\nadd_bang = lambda sentence: print(sentence + '!')\n")),(0,o.kt)("h3",{id:"example-2-checking-if-a-grade-is-an-a"},"Example 2: Checking if a Grade is an A"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# Normal Function\ndef check_if_A_grade(grade):\n    if grade >= 90:\n        return 'Got an A!'\n    else:\n        return 'Did not get an A.'\n\n# Lambda Function\ncheck_if_A_grade = lambda grade: 'Got an A!' if grade >= 90 else 'Did not get an A.'\n")),(0,o.kt)("h2",{id:"when-to-use-lambda-functions"},"When to Use Lambda Functions"),(0,o.kt)("p",null,"Lambda functions are a good choice when we need ",(0,o.kt)("strong",{parentName:"p"},"to create simple, one-line functions that we do not plan to reuse elsewhere in our code"),". They can also be useful for creating ",(0,o.kt)("inlineCode",{parentName:"p"},"anonymous functions")," that we need ",(0,o.kt)("strong",{parentName:"p"},"to pass as arguments to other functions"),"."),(0,o.kt)("p",null,"However, if we need to create more complex functions that are more than one line long, it is usually better to use a regular function, since it will be easier to read and maintain."),(0,o.kt)("h2",{id:"advantages-of-using-lambda-functions"},"Advantages of Using Lambda Functions"),(0,o.kt)("p",null,"Lambda functions have several advantages that make them useful in certain situations:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Concise syntax: Lambda functions use a more concise syntax than regular functions, which can make them easier to read and write, especially for simple functions.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Easy to pass as arguments: Lambda functions are often used as arguments to higher-order functions, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"map()"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"filter()"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"reduce()"),", since they can be defined inline and passed directly as arguments.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Can be defined anywhere: Lambda functions can be defined anywhere that a regular function can be defined, including inside other functions and inside list, dictionary, and set literals."))),(0,o.kt)("h2",{id:"limitations-of-lambda-functions"},"Limitations of Lambda Functions"),(0,o.kt)("p",null,"While lambda functions have several advantages, they also have some limitations that can make them less useful in certain situations:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Limited functionality: Lambda functions are limited to a single expression, which means that they cannot be used for more complex operations that require multiple statements or statements that have side effects.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"No documentation: Lambda functions do not have the same level of documentation as regular functions, since they cannot have docstrings or annotations.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Limited readability: While lambda functions can be more concise than regular functions, they can also be more difficult to read and understand, especially for more complex functions."))),(0,o.kt)("h2",{id:"conclusion"},"Conclusion"),(0,o.kt)("p",null,"Lambda functions are a useful tool for creating simple, one-line functions in Python. They have several advantages, including concise syntax and ease of use as arguments to higher-order functions, but also have some limitations, including limited functionality and readability. When deciding whether to use a lambda function or a regular function, consider the complexity of the operation, the need for documentation and readability, and whether the function will be reused elsewhere in the code."))}d.isMDXComponent=!0}}]);